import util.

run(Lines) =>
	% part 1
	Parsed = [split(S) : S in Lines],
	Left = sort([parse_radix_string(first(S), 10) : S in Parsed]),
	Right = sort([parse_radix_string(last(S), 10) : S in Parsed]),
	Distances = [abs(L - R) : {L, R} in zip(Left, Right)],
	println(sum(Distances)),

	% part 2
	Similarities = [L * count(L, Right) : L in Left],
	println(sum(Similarities)).


count(Term, []) = 0.
count(Term, [H|T]) = cond(H=Term, 1, 0) + count(Term, T).